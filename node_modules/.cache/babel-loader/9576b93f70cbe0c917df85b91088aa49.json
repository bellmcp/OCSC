{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nexport default async function add(something) {\n  const url = \"https://cubioinfo.com/aptitude-test/api/answersheets/1\";\n  axios.post(\"https://cubioinfo.com/aptitude-test/api/answersheets/1\", something).then(response => {\n    console.log(\"hello\");\n    this.setState({\n      data: response.data\n    });\n    console.log(this.state.data);\n  });\n\n  try {\n    console.log(\"try to fetch\");\n    console.log(\"json post:\", JSON.stringify(something));\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Content: \"POST questionaire\"\n      },\n      body: JSON.stringify(something)\n    });\n\n    if (response.ok) {\n      return await response; // return await response.json();\n    }\n\n    if (response.status <= 501) {\n      console.log(response.status); // alert(\n      //    \"เกิดปัญหา\" +\n      //     response.status +\n      //      \"\\n คลิก close  เพื่อเริ่มทำแบบทดสอบใหม่อีกครั้ง\"\n      //  );\n      //  window.location.href = `${process.env.PUBLIC_URL}`;\n\n      return response.status; // eslint-disable-next-line prefer-promise-reject-errors\n    }\n  } catch (error) {\n    if (error.response) {\n      /*\n       * The request was made and the server responded with a\n       * status code that falls out of the range of 2xx\n       */\n      return error.response.status; //console.log(error.response.data);\n      //console.log(error.response.status);\n    } else if (error.request) {\n      /*\n       * The request was made but no response was received, `error.request`\n       * is an instance of XMLHttpRequest in the browser and an instance\n       * of http.ClientRequest in Node.js\n       */\n      return error.request;\n    } else {\n      // Something happened in setting up the request and triggered an Error\n      return 999;\n    }\n  }\n}","map":{"version":3,"sources":["/Users/apple/Documents/GitHub/OCSCE/src/service/add.js"],"names":["React","axios","add","something","url","post","then","response","console","log","setState","data","state","JSON","stringify","fetch","method","headers","Content","body","ok","status","error","request"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,eAAeC,GAAf,CAAmBC,SAAnB,EAA8B;AAC3C,QAAMC,GAAG,GAAG,wDAAZ;AACAH,EAAAA,KAAK,CACFI,IADH,CACQ,wDADR,EACkEF,SADlE,EAEGG,IAFH,CAESC,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,SAAKC,QAAL,CAAc;AAAEC,MAAAA,IAAI,EAAEJ,QAAQ,CAACI;AAAjB,KAAd;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKG,KAAL,CAAWD,IAAvB;AACD,GANH;;AAOA,MAAI;AACFH,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BI,IAAI,CAACC,SAAL,CAAeX,SAAf,CAA1B;AACA,UAAMI,QAAQ,GAAG,MAAMQ,KAAK,CAACX,GAAD,EAAM;AAChCY,MAAAA,MAAM,EAAE,MADwB;AAEhCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,OAAO,EAAE;AADF,OAFuB;AAKhCC,MAAAA,IAAI,EAAEN,IAAI,CAACC,SAAL,CAAeX,SAAf;AAL0B,KAAN,CAA5B;;AAQA,QAAII,QAAQ,CAACa,EAAb,EAAiB;AACf,aAAO,MAAMb,QAAb,CADe,CAGf;AACD;;AACD,QAAIA,QAAQ,CAACc,MAAT,IAAmB,GAAvB,EAA4B;AAC1Bb,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACc,MAArB,EAD0B,CAE1B;AACA;AACA;AACA;AACA;AACA;;AACA,aAAOd,QAAQ,CAACc,MAAhB,CAR0B,CAU1B;AACD;AACF,GA5BD,CA4BE,OAAOC,KAAP,EAAc;AACd,QAAIA,KAAK,CAACf,QAAV,EAAoB;AAClB;;;;AAIA,aAAOe,KAAK,CAACf,QAAN,CAAec,MAAtB,CALkB,CAMlB;AACA;AACD,KARD,MAQO,IAAIC,KAAK,CAACC,OAAV,EAAmB;AACxB;;;;;AAKA,aAAOD,KAAK,CAACC,OAAb;AACD,KAPM,MAOA;AACL;AACA,aAAO,GAAP;AACD;AACF;AACF","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nexport default async function add(something) {\n  const url = \"https://cubioinfo.com/aptitude-test/api/answersheets/1\";\n  axios\n    .post(\"https://cubioinfo.com/aptitude-test/api/answersheets/1\", something)\n    .then((response) => {\n      console.log(\"hello\");\n      this.setState({ data: response.data });\n      console.log(this.state.data);\n    });\n  try {\n    console.log(\"try to fetch\");\n    console.log(\"json post:\", JSON.stringify(something));\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Content: \"POST questionaire\",\n      },\n      body: JSON.stringify(something),\n    });\n\n    if (response.ok) {\n      return await response;\n\n      // return await response.json();\n    }\n    if (response.status <= 501) {\n      console.log(response.status);\n      // alert(\n      //    \"เกิดปัญหา\" +\n      //     response.status +\n      //      \"\\n คลิก close  เพื่อเริ่มทำแบบทดสอบใหม่อีกครั้ง\"\n      //  );\n      //  window.location.href = `${process.env.PUBLIC_URL}`;\n      return response.status;\n\n      // eslint-disable-next-line prefer-promise-reject-errors\n    }\n  } catch (error) {\n    if (error.response) {\n      /*\n       * The request was made and the server responded with a\n       * status code that falls out of the range of 2xx\n       */\n      return error.response.status;\n      //console.log(error.response.data);\n      //console.log(error.response.status);\n    } else if (error.request) {\n      /*\n       * The request was made but no response was received, `error.request`\n       * is an instance of XMLHttpRequest in the browser and an instance\n       * of http.ClientRequest in Node.js\n       */\n      return error.request;\n    } else {\n      // Something happened in setting up the request and triggered an Error\n      return 999;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}