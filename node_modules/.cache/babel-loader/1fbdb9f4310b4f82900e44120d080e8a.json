{"ast":null,"code":"/**\n * Parse or format dates\n * @class fecha\n */\nvar fecha = {};\nvar token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|([HhMsDm])\\1?|[aA]|\"[^\"]*\"|'[^']*'/g;\nvar twoDigits = '\\\\d\\\\d?';\nvar threeDigits = '\\\\d{3}';\nvar fourDigits = '\\\\d{4}';\nvar word = '[^\\\\s]+';\nvar literal = /\\[([^]*?)\\]/gm;\n\nvar noop = function () {};\n\nfunction regexEscape(str) {\n  return str.replace(/[|\\\\{()[^$+*?.-]/g, '\\\\$&');\n}\n\nfunction shorten(arr, sLen) {\n  var newArr = [];\n\n  for (var i = 0, len = arr.length; i < len; i++) {\n    newArr.push(arr[i].substr(0, sLen));\n  }\n\n  return newArr;\n}\n\nfunction monthUpdate(arrName) {\n  return function (d, v, i18n) {\n    var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());\n\n    if (~index) {\n      d.month = index;\n    }\n  };\n}\n\nfunction pad(val, len) {\n  val = String(val);\n  len = len || 2;\n\n  while (val.length < len) {\n    val = '0' + val;\n  }\n\n  return val;\n}\n\nvar dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nvar monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nvar monthNamesShort = shorten(monthNames, 3);\nvar dayNamesShort = shorten(dayNames, 3);\nfecha.i18n = {\n  dayNamesShort: dayNamesShort,\n  dayNames: dayNames,\n  monthNamesShort: monthNamesShort,\n  monthNames: monthNames,\n  amPm: ['am', 'pm'],\n  DoFn: function DoFn(D) {\n    return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];\n  }\n};\nvar formatFlags = {\n  D: function (dateObj) {\n    return dateObj.getDate();\n  },\n  DD: function (dateObj) {\n    return pad(dateObj.getDate());\n  },\n  Do: function (dateObj, i18n) {\n    return i18n.DoFn(dateObj.getDate());\n  },\n  d: function (dateObj) {\n    return dateObj.getDay();\n  },\n  dd: function (dateObj) {\n    return pad(dateObj.getDay());\n  },\n  ddd: function (dateObj, i18n) {\n    return i18n.dayNamesShort[dateObj.getDay()];\n  },\n  dddd: function (dateObj, i18n) {\n    return i18n.dayNames[dateObj.getDay()];\n  },\n  M: function (dateObj) {\n    return dateObj.getMonth() + 1;\n  },\n  MM: function (dateObj) {\n    return pad(dateObj.getMonth() + 1);\n  },\n  MMM: function (dateObj, i18n) {\n    return i18n.monthNamesShort[dateObj.getMonth()];\n  },\n  MMMM: function (dateObj, i18n) {\n    return i18n.monthNames[dateObj.getMonth()];\n  },\n  YY: function (dateObj) {\n    return pad(String(dateObj.getFullYear()), 4).substr(2);\n  },\n  YYYY: function (dateObj) {\n    return pad(dateObj.getFullYear(), 4);\n  },\n  h: function (dateObj) {\n    return dateObj.getHours() % 12 || 12;\n  },\n  hh: function (dateObj) {\n    return pad(dateObj.getHours() % 12 || 12);\n  },\n  H: function (dateObj) {\n    return dateObj.getHours();\n  },\n  HH: function (dateObj) {\n    return pad(dateObj.getHours());\n  },\n  m: function (dateObj) {\n    return dateObj.getMinutes();\n  },\n  mm: function (dateObj) {\n    return pad(dateObj.getMinutes());\n  },\n  s: function (dateObj) {\n    return dateObj.getSeconds();\n  },\n  ss: function (dateObj) {\n    return pad(dateObj.getSeconds());\n  },\n  S: function (dateObj) {\n    return Math.round(dateObj.getMilliseconds() / 100);\n  },\n  SS: function (dateObj) {\n    return pad(Math.round(dateObj.getMilliseconds() / 10), 2);\n  },\n  SSS: function (dateObj) {\n    return pad(dateObj.getMilliseconds(), 3);\n  },\n  a: function (dateObj, i18n) {\n    return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];\n  },\n  A: function (dateObj, i18n) {\n    return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();\n  },\n  ZZ: function (dateObj) {\n    var o = dateObj.getTimezoneOffset();\n    return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);\n  }\n};\nvar parseFlags = {\n  D: [twoDigits, function (d, v) {\n    d.day = v;\n  }],\n  Do: [twoDigits + word, function (d, v) {\n    d.day = parseInt(v, 10);\n  }],\n  M: [twoDigits, function (d, v) {\n    d.month = v - 1;\n  }],\n  YY: [twoDigits, function (d, v) {\n    var da = new Date(),\n        cent = +('' + da.getFullYear()).substr(0, 2);\n    d.year = '' + (v > 68 ? cent - 1 : cent) + v;\n  }],\n  h: [twoDigits, function (d, v) {\n    d.hour = v;\n  }],\n  m: [twoDigits, function (d, v) {\n    d.minute = v;\n  }],\n  s: [twoDigits, function (d, v) {\n    d.second = v;\n  }],\n  YYYY: [fourDigits, function (d, v) {\n    d.year = v;\n  }],\n  S: ['\\\\d', function (d, v) {\n    d.millisecond = v * 100;\n  }],\n  SS: ['\\\\d{2}', function (d, v) {\n    d.millisecond = v * 10;\n  }],\n  SSS: [threeDigits, function (d, v) {\n    d.millisecond = v;\n  }],\n  d: [twoDigits, noop],\n  ddd: [word, noop],\n  MMM: [word, monthUpdate('monthNamesShort')],\n  MMMM: [word, monthUpdate('monthNames')],\n  a: [word, function (d, v, i18n) {\n    var val = v.toLowerCase();\n\n    if (val === i18n.amPm[0]) {\n      d.isPm = false;\n    } else if (val === i18n.amPm[1]) {\n      d.isPm = true;\n    }\n  }],\n  ZZ: ['[^\\\\s]*?[\\\\+\\\\-]\\\\d\\\\d:?\\\\d\\\\d|[^\\\\s]*?Z', function (d, v) {\n    var parts = (v + '').match(/([+-]|\\d\\d)/gi),\n        minutes;\n\n    if (parts) {\n      minutes = +(parts[1] * 60) + parseInt(parts[2], 10);\n      d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;\n    }\n  }]\n};\nparseFlags.dd = parseFlags.d;\nparseFlags.dddd = parseFlags.ddd;\nparseFlags.DD = parseFlags.D;\nparseFlags.mm = parseFlags.m;\nparseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;\nparseFlags.MM = parseFlags.M;\nparseFlags.ss = parseFlags.s;\nparseFlags.A = parseFlags.a; // Some common format strings\n\nfecha.masks = {\n  default: 'ddd MMM DD YYYY HH:mm:ss',\n  shortDate: 'M/D/YY',\n  mediumDate: 'MMM D, YYYY',\n  longDate: 'MMMM D, YYYY',\n  fullDate: 'dddd, MMMM D, YYYY',\n  shortTime: 'HH:mm',\n  mediumTime: 'HH:mm:ss',\n  longTime: 'HH:mm:ss.SSS'\n};\n/***\n * Format a date\n * @method format\n * @param {Date|number} dateObj\n * @param {string} mask Format of the date, i.e. 'mm-dd-yy' or 'shortDate'\n */\n\nfecha.format = function (dateObj, mask, i18nSettings) {\n  var i18n = i18nSettings || fecha.i18n;\n\n  if (typeof dateObj === 'number') {\n    dateObj = new Date(dateObj);\n  }\n\n  if (Object.prototype.toString.call(dateObj) !== '[object Date]' || isNaN(dateObj.getTime())) {\n    throw new Error('Invalid Date in fecha.format');\n  }\n\n  mask = fecha.masks[mask] || mask || fecha.masks['default'];\n  var literals = []; // Make literals inactive by replacing them with ??\n\n  mask = mask.replace(literal, function ($0, $1) {\n    literals.push($1);\n    return '@@@';\n  }); // Apply formatting rules\n\n  mask = mask.replace(token, function ($0) {\n    return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);\n  }); // Inline literal values back into the formatted value\n\n  return mask.replace(/@@@/g, function () {\n    return literals.shift();\n  });\n};\n/**\n * Parse a date string into an object, changes - into /\n * @method parse\n * @param {string} dateStr Date string\n * @param {string} format Date parse format\n * @returns {Date|boolean}\n */\n\n\nfecha.parse = function (dateStr, format, i18nSettings) {\n  var i18n = i18nSettings || fecha.i18n;\n\n  if (typeof format !== 'string') {\n    throw new Error('Invalid format in fecha.parse');\n  }\n\n  format = fecha.masks[format] || format; // Avoid regular expression denial of service, fail early for really long strings\n  // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\n\n  if (dateStr.length > 1000) {\n    return null;\n  }\n\n  var dateInfo = {};\n  var parseInfo = [];\n  var literals = [];\n  format = format.replace(literal, function ($0, $1) {\n    literals.push($1);\n    return '@@@';\n  });\n  var newFormat = regexEscape(format).replace(token, function ($0) {\n    if (parseFlags[$0]) {\n      var info = parseFlags[$0];\n      parseInfo.push(info[1]);\n      return '(' + info[0] + ')';\n    }\n\n    return $0;\n  });\n  newFormat = newFormat.replace(/@@@/g, function () {\n    return literals.shift();\n  });\n  var matches = dateStr.match(new RegExp(newFormat, 'i'));\n\n  if (!matches) {\n    return null;\n  }\n\n  for (var i = 1; i < matches.length; i++) {\n    parseInfo[i - 1](dateInfo, matches[i], i18n);\n  }\n\n  var today = new Date();\n\n  if (dateInfo.isPm === true && dateInfo.hour != null && +dateInfo.hour !== 12) {\n    dateInfo.hour = +dateInfo.hour + 12;\n  } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {\n    dateInfo.hour = 0;\n  }\n\n  var date;\n\n  if (dateInfo.timezoneOffset != null) {\n    dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;\n    date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1, dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));\n  } else {\n    date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1, dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);\n  }\n\n  return date;\n};\n\nexport default fecha;","map":{"version":3,"sources":["/Users/apple/Documents/GitHub/OCSCE/node_modules/fecha/src/fecha.js"],"names":["fecha","token","twoDigits","threeDigits","fourDigits","word","literal","noop","regexEscape","str","replace","shorten","arr","sLen","newArr","i","len","length","push","substr","monthUpdate","arrName","d","v","i18n","index","indexOf","charAt","toUpperCase","toLowerCase","month","pad","val","String","dayNames","monthNames","monthNamesShort","dayNamesShort","amPm","DoFn","D","formatFlags","dateObj","getDate","DD","Do","getDay","dd","ddd","dddd","M","getMonth","MM","MMM","MMMM","YY","getFullYear","YYYY","h","getHours","hh","H","HH","m","getMinutes","mm","s","getSeconds","ss","S","Math","round","getMilliseconds","SS","SSS","a","A","ZZ","o","getTimezoneOffset","floor","abs","parseFlags","day","parseInt","da","Date","cent","year","hour","minute","second","millisecond","isPm","parts","match","minutes","timezoneOffset","masks","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","format","mask","i18nSettings","Object","prototype","toString","call","isNaN","getTime","Error","literals","$0","$1","slice","shift","parse","dateStr","dateInfo","parseInfo","newFormat","info","matches","RegExp","today","date","UTC"],"mappings":"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","sourcesContent":["/**\n * Parse or format dates\n * @class fecha\n */\nvar fecha = {};\nvar token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|([HhMsDm])\\1?|[aA]|\"[^\"]*\"|'[^']*'/g;\nvar twoDigits = '\\\\d\\\\d?';\nvar threeDigits = '\\\\d{3}';\nvar fourDigits = '\\\\d{4}';\nvar word = '[^\\\\s]+';\nvar literal = /\\[([^]*?)\\]/gm;\nvar noop = function () {\n};\n\nfunction regexEscape(str) {\n  return str.replace( /[|\\\\{()[^$+*?.-]/g, '\\\\$&');\n}\n\nfunction shorten(arr, sLen) {\n  var newArr = [];\n  for (var i = 0, len = arr.length; i < len; i++) {\n    newArr.push(arr[i].substr(0, sLen));\n  }\n  return newArr;\n}\n\nfunction monthUpdate(arrName) {\n  return function (d, v, i18n) {\n    var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());\n    if (~index) {\n      d.month = index;\n    }\n  };\n}\n\nfunction pad(val, len) {\n  val = String(val);\n  len = len || 2;\n  while (val.length < len) {\n    val = '0' + val;\n  }\n  return val;\n}\n\nvar dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nvar monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nvar monthNamesShort = shorten(monthNames, 3);\nvar dayNamesShort = shorten(dayNames, 3);\nfecha.i18n = {\n  dayNamesShort: dayNamesShort,\n  dayNames: dayNames,\n  monthNamesShort: monthNamesShort,\n  monthNames: monthNames,\n  amPm: ['am', 'pm'],\n  DoFn: function DoFn(D) {\n    return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];\n  }\n};\n\nvar formatFlags = {\n  D: function(dateObj) {\n    return dateObj.getDate();\n  },\n  DD: function(dateObj) {\n    return pad(dateObj.getDate());\n  },\n  Do: function(dateObj, i18n) {\n    return i18n.DoFn(dateObj.getDate());\n  },\n  d: function(dateObj) {\n    return dateObj.getDay();\n  },\n  dd: function(dateObj) {\n    return pad(dateObj.getDay());\n  },\n  ddd: function(dateObj, i18n) {\n    return i18n.dayNamesShort[dateObj.getDay()];\n  },\n  dddd: function(dateObj, i18n) {\n    return i18n.dayNames[dateObj.getDay()];\n  },\n  M: function(dateObj) {\n    return dateObj.getMonth() + 1;\n  },\n  MM: function(dateObj) {\n    return pad(dateObj.getMonth() + 1);\n  },\n  MMM: function(dateObj, i18n) {\n    return i18n.monthNamesShort[dateObj.getMonth()];\n  },\n  MMMM: function(dateObj, i18n) {\n    return i18n.monthNames[dateObj.getMonth()];\n  },\n  YY: function(dateObj) {\n    return pad(String(dateObj.getFullYear()), 4).substr(2);\n  },\n  YYYY: function(dateObj) {\n    return pad(dateObj.getFullYear(), 4);\n  },\n  h: function(dateObj) {\n    return dateObj.getHours() % 12 || 12;\n  },\n  hh: function(dateObj) {\n    return pad(dateObj.getHours() % 12 || 12);\n  },\n  H: function(dateObj) {\n    return dateObj.getHours();\n  },\n  HH: function(dateObj) {\n    return pad(dateObj.getHours());\n  },\n  m: function(dateObj) {\n    return dateObj.getMinutes();\n  },\n  mm: function(dateObj) {\n    return pad(dateObj.getMinutes());\n  },\n  s: function(dateObj) {\n    return dateObj.getSeconds();\n  },\n  ss: function(dateObj) {\n    return pad(dateObj.getSeconds());\n  },\n  S: function(dateObj) {\n    return Math.round(dateObj.getMilliseconds() / 100);\n  },\n  SS: function(dateObj) {\n    return pad(Math.round(dateObj.getMilliseconds() / 10), 2);\n  },\n  SSS: function(dateObj) {\n    return pad(dateObj.getMilliseconds(), 3);\n  },\n  a: function(dateObj, i18n) {\n    return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];\n  },\n  A: function(dateObj, i18n) {\n    return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();\n  },\n  ZZ: function(dateObj) {\n    var o = dateObj.getTimezoneOffset();\n    return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);\n  }\n};\n\nvar parseFlags = {\n  D: [twoDigits, function (d, v) {\n    d.day = v;\n  }],\n  Do: [twoDigits + word, function (d, v) {\n    d.day = parseInt(v, 10);\n  }],\n  M: [twoDigits, function (d, v) {\n    d.month = v - 1;\n  }],\n  YY: [twoDigits, function (d, v) {\n    var da = new Date(), cent = +('' + da.getFullYear()).substr(0, 2);\n    d.year = '' + (v > 68 ? cent - 1 : cent) + v;\n  }],\n  h: [twoDigits, function (d, v) {\n    d.hour = v;\n  }],\n  m: [twoDigits, function (d, v) {\n    d.minute = v;\n  }],\n  s: [twoDigits, function (d, v) {\n    d.second = v;\n  }],\n  YYYY: [fourDigits, function (d, v) {\n    d.year = v;\n  }],\n  S: ['\\\\d', function (d, v) {\n    d.millisecond = v * 100;\n  }],\n  SS: ['\\\\d{2}', function (d, v) {\n    d.millisecond = v * 10;\n  }],\n  SSS: [threeDigits, function (d, v) {\n    d.millisecond = v;\n  }],\n  d: [twoDigits, noop],\n  ddd: [word, noop],\n  MMM: [word, monthUpdate('monthNamesShort')],\n  MMMM: [word, monthUpdate('monthNames')],\n  a: [word, function (d, v, i18n) {\n    var val = v.toLowerCase();\n    if (val === i18n.amPm[0]) {\n      d.isPm = false;\n    } else if (val === i18n.amPm[1]) {\n      d.isPm = true;\n    }\n  }],\n  ZZ: ['[^\\\\s]*?[\\\\+\\\\-]\\\\d\\\\d:?\\\\d\\\\d|[^\\\\s]*?Z', function (d, v) {\n    var parts = (v + '').match(/([+-]|\\d\\d)/gi), minutes;\n\n    if (parts) {\n      minutes = +(parts[1] * 60) + parseInt(parts[2], 10);\n      d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;\n    }\n  }]\n};\nparseFlags.dd = parseFlags.d;\nparseFlags.dddd = parseFlags.ddd;\nparseFlags.DD = parseFlags.D;\nparseFlags.mm = parseFlags.m;\nparseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;\nparseFlags.MM = parseFlags.M;\nparseFlags.ss = parseFlags.s;\nparseFlags.A = parseFlags.a;\n\n\n// Some common format strings\nfecha.masks = {\n  default: 'ddd MMM DD YYYY HH:mm:ss',\n  shortDate: 'M/D/YY',\n  mediumDate: 'MMM D, YYYY',\n  longDate: 'MMMM D, YYYY',\n  fullDate: 'dddd, MMMM D, YYYY',\n  shortTime: 'HH:mm',\n  mediumTime: 'HH:mm:ss',\n  longTime: 'HH:mm:ss.SSS'\n};\n\n/***\n * Format a date\n * @method format\n * @param {Date|number} dateObj\n * @param {string} mask Format of the date, i.e. 'mm-dd-yy' or 'shortDate'\n */\nfecha.format = function (dateObj, mask, i18nSettings) {\n  var i18n = i18nSettings || fecha.i18n;\n\n  if (typeof dateObj === 'number') {\n    dateObj = new Date(dateObj);\n  }\n\n  if (Object.prototype.toString.call(dateObj) !== '[object Date]' || isNaN(dateObj.getTime())) {\n    throw new Error('Invalid Date in fecha.format');\n  }\n\n  mask = fecha.masks[mask] || mask || fecha.masks['default'];\n\n  var literals = [];\n\n  // Make literals inactive by replacing them with ??\n  mask = mask.replace(literal, function($0, $1) {\n    literals.push($1);\n    return '@@@';\n  });\n  // Apply formatting rules\n  mask = mask.replace(token, function ($0) {\n    return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);\n  });\n  // Inline literal values back into the formatted value\n  return mask.replace(/@@@/g, function() {\n    return literals.shift();\n  });\n};\n\n/**\n * Parse a date string into an object, changes - into /\n * @method parse\n * @param {string} dateStr Date string\n * @param {string} format Date parse format\n * @returns {Date|boolean}\n */\nfecha.parse = function (dateStr, format, i18nSettings) {\n  var i18n = i18nSettings || fecha.i18n;\n\n  if (typeof format !== 'string') {\n    throw new Error('Invalid format in fecha.parse');\n  }\n\n  format = fecha.masks[format] || format;\n\n  // Avoid regular expression denial of service, fail early for really long strings\n  // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\n  if (dateStr.length > 1000) {\n    return null;\n  }\n\n  var dateInfo = {};\n  var parseInfo = [];\n  var literals = [];\n  format = format.replace(literal, function($0, $1) {\n    literals.push($1);\n    return '@@@';\n  });\n  var newFormat = regexEscape(format).replace(token, function ($0) {\n    if (parseFlags[$0]) {\n      var info = parseFlags[$0];\n      parseInfo.push(info[1]);\n      return '(' + info[0] + ')';\n    }\n\n    return $0;\n  });\n  newFormat = newFormat.replace(/@@@/g, function() {\n    return literals.shift();\n  });\n  var matches = dateStr.match(new RegExp(newFormat, 'i'));\n  if (!matches) {\n    return null;\n  }\n\n  for (var i = 1; i < matches.length; i++) {\n    parseInfo[i - 1](dateInfo, matches[i], i18n);\n  }\n\n  var today = new Date();\n  if (dateInfo.isPm === true && dateInfo.hour != null && +dateInfo.hour !== 12) {\n    dateInfo.hour = +dateInfo.hour + 12;\n  } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {\n    dateInfo.hour = 0;\n  }\n\n  var date;\n  if (dateInfo.timezoneOffset != null) {\n    dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;\n    date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\n      dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));\n  } else {\n    date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\n      dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);\n  }\n  return date;\n};\n\nexport default fecha;\n"]},"metadata":{},"sourceType":"module"}