{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/GitHub/OCSCE/src/service/get.js\";\nimport React from \"react\";\nimport Popup from \"./Modals\";\nimport { render } from \"@testing-library/react\";\nexport default async function get() {\n  const url = \"https://cubioinfo.com/aptitude-test/api/testitems/1\";\n\n  try {\n    const response = await fetch(url);\n\n    if (response.ok) {\n      return await response.clone().json().catch(() => response.text()); // return await response.json();\n    }\n\n    if (response.status <= 501) {\n      return Popup(response.status); //response.status\n      // eslint-disable-next-line prefer-promise-reject-errors\n    }\n  } catch (error) {\n    if (error.response) {\n      /*\n       * The request was made and the server responded with a\n       * status code that falls out of the range of 2xx\n       */\n      return /*#__PURE__*/React.createElement(Popup, {\n        error: error.response.status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 14\n        }\n      });\n    } else if (error.request) {\n      /*\n       * The request was made but no response was received, `error.request`\n       * is an instance of XMLHttpRequest in the browser and an instance\n       * of http.ClientRequest in Node.js\n       */\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request and triggered an Error\n      console.log(\"Error\", error.message);\n    }\n\n    console.log(error.config);\n  }\n}","map":{"version":3,"sources":["/Users/apple/Documents/GitHub/OCSCE/src/service/get.js"],"names":["React","Popup","render","get","url","response","fetch","ok","clone","json","catch","text","status","error","request","console","log","message","config"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,eAAe,eAAeC,GAAf,GAAqB;AAClC,QAAMC,GAAG,GAAG,qDAAZ;;AACA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;;AACA,QAAIC,QAAQ,CAACE,EAAb,EAAiB;AACf,aAAO,MAAMF,QAAQ,CAClBG,KADU,GAEVC,IAFU,GAGVC,KAHU,CAGJ,MAAML,QAAQ,CAACM,IAAT,EAHF,CAAb,CADe,CAKf;AACD;;AACD,QAAIN,QAAQ,CAACO,MAAT,IAAmB,GAAvB,EAA4B;AAC1B,aAAOX,KAAK,CAACI,QAAQ,CAACO,MAAV,CAAZ,CAD0B,CAE1B;AACA;AACD;AACF,GAdD,CAcE,OAAOC,KAAP,EAAc;AACd,QAAIA,KAAK,CAACR,QAAV,EAAoB;AAClB;;;;AAIA,0BAAO,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEQ,KAAK,CAACR,QAAN,CAAeO,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAND,MAMO,IAAIC,KAAK,CAACC,OAAV,EAAmB;AACxB;;;;;AAKAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,OAAlB;AACD,KAPM,MAOA;AACL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAAK,CAACI,OAA3B;AACD;;AACDF,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACK,MAAlB;AACD;AACF","sourcesContent":["import React from \"react\";\nimport Popup from \"./Modals\";\nimport { render } from \"@testing-library/react\";\nexport default async function get() {\n  const url = \"https://cubioinfo.com/aptitude-test/api/testitems/1\";\n  try {\n    const response = await fetch(url);\n    if (response.ok) {\n      return await response\n        .clone()\n        .json()\n        .catch(() => response.text());\n      // return await response.json();\n    }\n    if (response.status <= 501) {\n      return Popup(response.status);\n      //response.status\n      // eslint-disable-next-line prefer-promise-reject-errors\n    }\n  } catch (error) {\n    if (error.response) {\n      /*\n       * The request was made and the server responded with a\n       * status code that falls out of the range of 2xx\n       */\n      return <Popup error={error.response.status} />;\n    } else if (error.request) {\n      /*\n       * The request was made but no response was received, `error.request`\n       * is an instance of XMLHttpRequest in the browser and an instance\n       * of http.ClientRequest in Node.js\n       */\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request and triggered an Error\n      console.log(\"Error\", error.message);\n    }\n    console.log(error.config);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}