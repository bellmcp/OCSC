{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { isEqual, isNil } from '@antv/util';\nimport Action from '../base'; // 判断是否有样式\n\nfunction hasClass(dom, className) {\n  if (!dom) {\n    return false;\n  }\n\n  var cls = '';\n\n  if (!dom.className) {\n    return false;\n  }\n\n  if (!isNil(dom.className.baseVal)) {\n    cls = dom.className.baseVal;\n  } else {\n    cls = dom.className;\n  }\n\n  return cls.includes(className);\n}\n\nfunction isParent(dom, cls) {\n  var parent = dom.parentNode;\n  var rst = false;\n\n  while (parent && parent !== document.body) {\n    if (hasClass(parent, cls)) {\n      rst = true;\n      break;\n    }\n\n    parent = parent.parentNode;\n  }\n\n  return rst;\n}\n/**\n * Tooltip 展示隐藏的 Action\n * @ignore\n */\n\n\nvar TooltipAction =\n/** @class */\nfunction (_super) {\n  __extends(TooltipAction, _super);\n\n  function TooltipAction() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.timeStamp = 0;\n    return _this;\n  }\n  /**\n   * 显示 Tooltip\n   * @returns\n   */\n\n\n  TooltipAction.prototype.show = function () {\n    var context = this.context;\n    var ev = context.event;\n    var view = context.view;\n    var isTooltipLocked = view.isTooltipLocked();\n\n    if (isTooltipLocked) {\n      // 锁定时不移动 tooltip\n      return;\n    }\n\n    var lastTimeStamp = this.timeStamp;\n    var timeStamp = +new Date();\n\n    if (timeStamp - lastTimeStamp > 16) {\n      var preLoc = this.location;\n      var curLoc = {\n        x: ev.x,\n        y: ev.y\n      };\n\n      if (!preLoc || !isEqual(preLoc, curLoc)) {\n        this.showTooltip(view, curLoc);\n      }\n\n      this.timeStamp = timeStamp;\n      this.location = curLoc;\n    }\n  };\n  /**\n   * 隐藏 Tooltip。\n   * @returns\n   */\n\n\n  TooltipAction.prototype.hide = function () {\n    var view = this.context.view;\n    var isTooltipLocked = view.isTooltipLocked();\n\n    if (isTooltipLocked) {\n      // 锁定 tooltip 时不隐藏\n      return;\n    }\n\n    this.hideTooltip(view);\n    this.location = null;\n  };\n\n  TooltipAction.prototype.showTooltip = function (view, point) {\n    // 相同位置不重复展示\n    view.showTooltip(point);\n  };\n\n  TooltipAction.prototype.hideTooltip = function (view) {\n    view.hideTooltip();\n  };\n\n  return TooltipAction;\n}(Action);\n\nexport default TooltipAction;","map":{"version":3,"sources":["../../../../src/interaction/action/component/tooltip.ts"],"names":[],"mappings":"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","sourcesContent":["import { get, isEqual, isNil } from '@antv/util';\nimport { View } from '../../../chart';\nimport { Point } from '../../../interface';\nimport Action from '../base';\n\n// 判断是否有样式\nfunction hasClass(dom, className) {\n  if (!dom) {\n    return false;\n  }\n  let cls = '';\n  if (!dom.className) {\n    return false;\n  }\n  if (!isNil(dom.className.baseVal)) {\n    cls = dom.className.baseVal;\n  } else {\n    cls = dom.className;\n  }\n  return cls.includes(className);\n}\n\nfunction isParent(dom, cls) {\n  let parent = dom.parentNode;\n  let rst = false;\n  while (parent && parent !== document.body) {\n    if (hasClass(parent, cls)) {\n      rst = true;\n      break;\n    }\n    parent = parent.parentNode;\n  }\n  return rst;\n}\n\n/**\n * Tooltip 展示隐藏的 Action\n * @ignore\n */\nclass TooltipAction extends Action {\n  private timeStamp: number = 0;\n  private location: Point;\n\n  /**\n   * 显示 Tooltip\n   * @returns\n   */\n  public show() {\n    const context = this.context;\n    const ev = context.event;\n    const view = context.view;\n    const isTooltipLocked = view.isTooltipLocked();\n    if (isTooltipLocked) {\n      // 锁定时不移动 tooltip\n      return;\n    }\n    const lastTimeStamp = this.timeStamp;\n    const timeStamp = +new Date();\n\n    if (timeStamp - lastTimeStamp > 16) {\n      const preLoc = this.location;\n      const curLoc = { x: ev.x, y: ev.y };\n      if (!preLoc || !isEqual(preLoc, curLoc)) {\n        this.showTooltip(view, curLoc);\n      }\n      this.timeStamp = timeStamp;\n      this.location = curLoc;\n    }\n  }\n\n  /**\n   * 隐藏 Tooltip。\n   * @returns\n   */\n  public hide() {\n    const view = this.context.view;\n    const isTooltipLocked = view.isTooltipLocked();\n    if (isTooltipLocked) {\n      // 锁定 tooltip 时不隐藏\n      return;\n    }\n    this.hideTooltip(view);\n    this.location = null;\n  }\n\n  protected showTooltip(view: View, point: Point) {\n    // 相同位置不重复展示\n    view.showTooltip(point);\n  }\n\n  protected hideTooltip(view) {\n    view.hideTooltip();\n  }\n}\n\nexport default TooltipAction;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}