{"ast":null,"code":"import { head, isNil, last } from '@antv/util';\nimport interval from '../util/interval';\nimport pretty from '../util/pretty';\nimport strictLimit from '../util/strict-limit';\n/**\n * 计算线性的 ticks，使用 R's pretty 方法\n * @param cfg 度量的配置项\n * @returns 计算后的 ticks\n */\n\nexport default function linearPretty(cfg) {\n  var min = cfg.min,\n      max = cfg.max,\n      tickCount = cfg.tickCount,\n      tickInterval = cfg.tickInterval,\n      minLimit = cfg.minLimit,\n      maxLimit = cfg.maxLimit;\n  var ticks = pretty(min, max, tickCount).ticks;\n\n  if (!isNil(minLimit) || !isNil(maxLimit)) {\n    return strictLimit(cfg, head(ticks), last(ticks));\n  }\n\n  if (tickInterval) {\n    return interval(min, max, tickInterval).ticks;\n  }\n\n  return ticks;\n}","map":{"version":3,"sources":["../../src/tick-method/r-prettry.ts"],"names":[],"mappings":"AAAA,SAAS,IAAT,EAAe,KAAf,EAAsB,IAAtB,QAAkC,YAAlC;AAEA,OAAO,QAAP,MAAqB,kBAArB;AACA,OAAO,MAAP,MAAmB,gBAAnB;AACA,OAAO,WAAP,MAAwB,sBAAxB;AAEA;;;;;;AAKA,eAAc,SAAU,YAAV,CAAuB,GAAvB,EAAuC;AAC3C,MAAA,GAAA,GAAA,GAAA,CAAA,GAAA;AAAA,MAAK,GAAA,GAAA,GAAA,CAAA,GAAL;AAAA,MAAU,SAAA,GAAA,GAAA,CAAA,SAAV;AAAA,MAAqB,YAAA,GAAA,GAAA,CAAA,YAArB;AAAA,MAAmC,QAAA,GAAA,GAAA,CAAA,QAAnC;AAAA,MAA6C,QAAA,GAAA,GAAA,CAAA,QAA7C;AACR,MAAM,KAAK,GAAG,MAAM,CAAC,GAAD,EAAM,GAAN,EAAW,SAAX,CAAN,CAA4B,KAA1C;;AAEA,MAAI,CAAC,KAAK,CAAC,QAAD,CAAN,IAAoB,CAAC,KAAK,CAAC,QAAD,CAA9B,EAA0C;AACxC,WAAO,WAAW,CAAC,GAAD,EAAM,IAAI,CAAC,KAAD,CAAV,EAAmB,IAAI,CAAC,KAAD,CAAvB,CAAlB;AACD;;AACD,MAAI,YAAJ,EAAkB;AAChB,WAAO,QAAQ,CAAC,GAAD,EAAM,GAAN,EAAW,YAAX,CAAR,CAAiC,KAAxC;AACD;;AACD,SAAO,KAAP;AACD","sourceRoot":"","sourcesContent":["import { head, isNil, last } from '@antv/util';\nimport interval from '../util/interval';\nimport pretty from '../util/pretty';\nimport strictLimit from '../util/strict-limit';\n/**\n * 计算线性的 ticks，使用 R's pretty 方法\n * @param cfg 度量的配置项\n * @returns 计算后的 ticks\n */\nexport default function linearPretty(cfg) {\n    var min = cfg.min, max = cfg.max, tickCount = cfg.tickCount, tickInterval = cfg.tickInterval, minLimit = cfg.minLimit, maxLimit = cfg.maxLimit;\n    var ticks = pretty(min, max, tickCount).ticks;\n    if (!isNil(minLimit) || !isNil(maxLimit)) {\n        return strictLimit(cfg, head(ticks), last(ticks));\n    }\n    if (tickInterval) {\n        return interval(min, max, tickInterval).ticks;\n    }\n    return ticks;\n}\n//# sourceMappingURL=r-prettry.js.map"]},"metadata":{},"sourceType":"module"}