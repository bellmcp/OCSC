{"ast":null,"code":"import _regeneratorRuntime from\"/Users/apple/Documents/GitHub/OCSCE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/apple/Documents/GitHub/OCSCE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export default function add(_x){return _add.apply(this,arguments);}function _add(){_add=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(something){var url,getCookie,token,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:getCookie=function _getCookie(name){var nameEQ=name+\"=\";var ca=document.cookie.split(\";\");for(var i=0;i<ca.length;i++){var c=ca[i];while(c.charAt(0)===\" \"){c=c.substring(1,c.length);}if(c.indexOf(nameEQ)===0)return c.substring(nameEQ.length,c.length);}return null;};url=\"https://cubioinfo.com/aptitude-test/api/admins/1234567891235\";token=getCookie(\"token\");_context.prev=3;console.log(\"json post:\",JSON.stringify(something));_context.next=7;return fetch(url,{method:\"PUT\",headers:{\"Content-Type\":\"application/problem+json; charset=utf-8\",Authorization:\"Bearer\"+\" \"+token},body:JSON.stringify(something)});case 7:response=_context.sent;if(!response.ok){_context.next=12;break;}_context.next=11;return response.json();case 11:return _context.abrupt(\"return\",_context.sent);case 12:if(!(response.status<=501)){_context.next=15;break;}console.log(response.status);return _context.abrupt(\"return\",response.status);case 15:_context.next=30;break;case 17:_context.prev=17;_context.t0=_context[\"catch\"](3);if(!_context.t0.response){_context.next=25;break;}console.log(_context.t0.response.data);console.log(_context.t0.response.status);return _context.abrupt(\"return\",_context.t0.response.status);case 25:if(!_context.t0.request){_context.next=29;break;}return _context.abrupt(\"return\",_context.t0.request);case 29:return _context.abrupt(\"return\",999);case 30:case\"end\":return _context.stop();}}},_callee,null,[[3,17]]);}));return _add.apply(this,arguments);}","map":{"version":3,"sources":["/Users/apple/Documents/GitHub/OCSCE/src/service/put.js"],"names":["add","something","getCookie","name","nameEQ","ca","document","cookie","split","i","length","c","charAt","substring","indexOf","url","token","console","log","JSON","stringify","fetch","method","headers","Authorization","body","response","ok","json","status","data","request"],"mappings":"iTAAA,uBAA8BA,CAAAA,GAA9B,wC,6EAAe,iBAAmBC,SAAnB,UAEJC,SAFI,gIAEJA,SAFI,qBAEMC,IAFN,CAEY,CACvB,GAAIC,CAAAA,MAAM,CAAGD,IAAI,CAAG,GAApB,CACA,GAAIE,CAAAA,EAAE,CAAGC,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,CAAT,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGJ,EAAE,CAACK,MAAvB,CAA+BD,CAAC,EAAhC,CAAoC,CAClC,GAAIE,CAAAA,CAAC,CAAGN,EAAE,CAACI,CAAD,CAAV,CACA,MAAOE,CAAC,CAACC,MAAF,CAAS,CAAT,IAAgB,GAAvB,EAA4BD,CAAC,CAAGA,CAAC,CAACE,SAAF,CAAY,CAAZ,CAAeF,CAAC,CAACD,MAAjB,CAAJ,CAA5B,CACA,GAAIC,CAAC,CAACG,OAAF,CAAUV,MAAV,IAAsB,CAA1B,CAA6B,MAAOO,CAAAA,CAAC,CAACE,SAAF,CAAYT,MAAM,CAACM,MAAnB,CAA2BC,CAAC,CAACD,MAA7B,CAAP,CAC9B,CACD,MAAO,KAAP,CACD,CAXY,CACPK,GADO,CACD,8DADC,CAYPC,KAZO,CAYCd,SAAS,CAAC,OAAD,CAZV,iBAcXe,OAAO,CAACC,GAAR,CAAY,YAAZ,CAA0BC,IAAI,CAACC,SAAL,CAAenB,SAAf,CAA1B,EAdW,sBAeYoB,CAAAA,KAAK,CAACN,GAAD,CAAM,CAChCO,MAAM,CAAE,KADwB,CAEhCC,OAAO,CAAE,CACP,eAAgB,yCADT,CAEPC,aAAa,CAAE,SAAW,GAAX,CAAiBR,KAFzB,CAFuB,CAMhCS,IAAI,CAAEN,IAAI,CAACC,SAAL,CAAenB,SAAf,CAN0B,CAAN,CAfjB,QAeLyB,QAfK,mBAwBPA,QAAQ,CAACC,EAxBF,iDAyBID,CAAAA,QAAQ,CAACE,IAAT,EAzBJ,qEA2BPF,QAAQ,CAACG,MAAT,EAAmB,GA3BZ,2BA4BTZ,OAAO,CAACC,GAAR,CAAYQ,QAAQ,CAACG,MAArB,EA5BS,gCA6BFH,QAAQ,CAACG,MA7BP,+FAgCP,YAAMH,QAhCC,0BAiCTT,OAAO,CAACC,GAAR,CAAY,YAAMQ,QAAN,CAAeI,IAA3B,EACAb,OAAO,CAACC,GAAR,CAAY,YAAMQ,QAAN,CAAeG,MAA3B,EAlCS,gCAmCF,YAAMH,QAAN,CAAeG,MAnCb,cAoCA,YAAME,OApCN,0DAqCF,YAAMA,OArCJ,0CAuCF,GAvCE,uE","sourcesContent":["export default async function add(something) {\n  const url = \"https://cubioinfo.com/aptitude-test/api/admins/1234567891235\";\n  function getCookie(name) {\n    var nameEQ = name + \"=\";\n    var ca = document.cookie.split(\";\");\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) === \" \") c = c.substring(1, c.length);\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n    }\n    return null;\n  }\n  const token = getCookie(\"token\");\n  try {\n    console.log(\"json post:\", JSON.stringify(something));\n    const response = await fetch(url, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/problem+json; charset=utf-8\",\n        Authorization: \"Bearer\" + \" \" + token,\n      },\n      body: JSON.stringify(something),\n    });\n\n    if (response.ok) {\n      return await response.json();\n    }\n    if (response.status <= 501) {\n      console.log(response.status);\n      return response.status;\n    }\n  } catch (error) {\n    if (error.response) {\n      console.log(error.response.data);\n      console.log(error.response.status);\n      return error.response.status;\n    } else if (error.request) {\n      return error.request;\n    } else {\n      return 999;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}