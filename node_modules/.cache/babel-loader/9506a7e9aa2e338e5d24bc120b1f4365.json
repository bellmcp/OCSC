{"ast":null,"code":"export default async function get(start, end) {\n  const url = `${process.env.PUBLIC_URL}` + '/api/answersheets/' + start + '/' + end;\n\n  try {\n    const response = await fetch(url);\n\n    if (response.ok) {\n      return await response.clone().json().catch(() => response.text()); // return await response.json();\n    }\n\n    if (response.status <= 501) {\n      return response.status;\n    }\n  } catch (error) {\n    if (error.response) {\n      console.log(error.response.headers);\n      return error.response.status;\n    } else if (error.request) {\n      console.log(error.request);\n    } else {\n      console.log('Error', error.message);\n    }\n\n    console.log(error.config);\n  }\n}","map":{"version":3,"sources":["/Users/ninew/Documents/GitHub/OCSC/src/service/getTable.js"],"names":["get","start","end","url","process","env","PUBLIC_URL","response","fetch","ok","clone","json","catch","text","status","error","console","log","headers","request","message","config"],"mappings":"AAAA,eAAe,eAAeA,GAAf,CAAmBC,KAAnB,EAA0BC,GAA1B,EAA+B;AAC5C,QAAMC,GAAG,GACR,GAAEC,OAAO,CAACC,GAAR,CAAYC,UAAW,EAA1B,GAA4B,oBAA5B,GAAmDL,KAAnD,GAA2D,GAA3D,GAAiEC,GADjE;;AAEA,MAAI;AACF,UAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,CAA5B;;AACA,QAAII,QAAQ,CAACE,EAAb,EAAiB;AACf,aAAO,MAAMF,QAAQ,CAClBG,KADU,GAEVC,IAFU,GAGVC,KAHU,CAGJ,MAAML,QAAQ,CAACM,IAAT,EAHF,CAAb,CADe,CAKf;AACD;;AACD,QAAIN,QAAQ,CAACO,MAAT,IAAmB,GAAvB,EAA4B;AAC1B,aAAOP,QAAQ,CAACO,MAAhB;AACD;AACF,GAZD,CAYE,OAAOC,KAAP,EAAc;AACd,QAAIA,KAAK,CAACR,QAAV,EAAoB;AAClBS,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACR,QAAN,CAAeW,OAA3B;AACA,aAAOH,KAAK,CAACR,QAAN,CAAeO,MAAtB;AACD,KAHD,MAGO,IAAIC,KAAK,CAACI,OAAV,EAAmB;AACxBH,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACI,OAAlB;AACD,KAFM,MAEA;AACLH,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAAK,CAACK,OAA3B;AACD;;AACDJ,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACM,MAAlB;AACD;AACF","sourcesContent":["export default async function get(start, end) {\n  const url =\n  `${process.env.PUBLIC_URL}`+'/api/answersheets/' + start + '/' + end\n  try {\n    const response = await fetch(url)\n    if (response.ok) {\n      return await response\n        .clone()\n        .json()\n        .catch(() => response.text())\n      // return await response.json();\n    }\n    if (response.status <= 501) {\n      return response.status\n    }\n  } catch (error) {\n    if (error.response) {\n      console.log(error.response.headers)\n      return error.response.status\n    } else if (error.request) {\n      console.log(error.request)\n    } else {\n      console.log('Error', error.message)\n    }\n    console.log(error.config)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}