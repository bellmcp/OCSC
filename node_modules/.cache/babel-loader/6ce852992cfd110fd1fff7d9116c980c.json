{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/GitHub/OCSCE/src/components/Questionaire1.js\";\nimport React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Box from \"@material-ui/core/Box\";\nimport Data from \"../Data/contentData\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Question from \"./Question\";\nexport default function RadioButtons(data) {\n  const [values2, setValues2] = React.useState(Data);\n\n  const handleChange = (value, index) => {\n    const newArray = [...values2];\n    newArray[index].value = value;\n    setValues2(newArray);\n  };\n\n  const renderQuestions = () => {\n    return values2.map((question, index) => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        xs: 12,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Question, {\n        index: index,\n        value: question.value,\n        header: question.header,\n        description: question.description,\n        sub1: question.sub1,\n        sub2: question.sub2,\n        handleChange: e => handleChange(e, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }\n      }));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    bgcolor: \"background.paper\",\n    spacing: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, renderQuestions())));\n}","map":{"version":3,"sources":["/Users/apple/Documents/GitHub/OCSCE/src/components/Questionaire1.js"],"names":["React","FormControl","Box","Data","Grid","Question","RadioButtons","data","values2","setValues2","useState","handleChange","value","index","newArray","renderQuestions","map","question","header","description","sub1","sub2","e"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,eAAe,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AACzC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,KAAK,CAACU,QAAN,CAAeP,IAAf,CAA9B;;AACA,QAAMQ,YAAY,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACrC,UAAMC,QAAQ,GAAG,CAAC,GAAGN,OAAJ,CAAjB;AACAM,IAAAA,QAAQ,CAACD,KAAD,CAAR,CAAgBD,KAAhB,GAAwBA,KAAxB;AACAH,IAAAA,UAAU,CAACK,QAAD,CAAV;AACD,GAJD;;AAMA,QAAMC,eAAe,GAAG,MAAM;AAC5B,WAAOP,OAAO,CAACQ,GAAR,CAAY,CAACC,QAAD,EAAWJ,KAAX,KAAqB;AACtC,0BACE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,EAAE,EAAE,EAApB;AAAwB,QAAA,GAAG,EAAEA,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD;AACE,QAAA,KAAK,EAAEA,KADT;AAEE,QAAA,KAAK,EAAEI,QAAQ,CAACL,KAFlB;AAGE,QAAA,MAAM,EAAEK,QAAQ,CAACC,MAHnB;AAIE,QAAA,WAAW,EAAED,QAAQ,CAACE,WAJxB;AAKE,QAAA,IAAI,EAAEF,QAAQ,CAACG,IALjB;AAME,QAAA,IAAI,EAAEH,QAAQ,CAACI,IANjB;AAOE,QAAA,YAAY,EAAGC,CAAD,IAAOX,YAAY,CAACW,CAAD,EAAIT,KAAJ,CAPnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAaD,KAdM,CAAP;AAeD,GAhBD;;AAiBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,kBAAb;AAAgC,IAAA,OAAO,EAAE,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCE,eAAe,EAAlD,CADF,CADF,CADF;AAOD","sourcesContent":["import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Box from \"@material-ui/core/Box\";\nimport Data from \"../Data/contentData\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Question from \"./Question\";\nexport default function RadioButtons(data) {\n  const [values2, setValues2] = React.useState(Data);\n  const handleChange = (value, index) => {\n    const newArray = [...values2];\n    newArray[index].value = value;\n    setValues2(newArray);\n  };\n\n  const renderQuestions = () => {\n    return values2.map((question, index) => {\n      return (\n        <Grid container xs={12} key={index}>\n          <Question\n            index={index}\n            value={question.value}\n            header={question.header}\n            description={question.description}\n            sub1={question.sub1}\n            sub2={question.sub2}\n            handleChange={(e) => handleChange(e, index)}\n          />\n        </Grid>\n      );\n    });\n  };\n  return (\n    <div>\n      <Box bgcolor=\"background.paper\" spacing={10}>\n        <FormControl component=\"fieldset\">{renderQuestions()}</FormControl>\n      </Box>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}