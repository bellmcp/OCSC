{"ast":null,"code":"import _regeneratorRuntime from\"/Users/apple/Documents/GitHub/OCSCE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/apple/Documents/GitHub/OCSCE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export default function add(_x){return _add.apply(this,arguments);}function _add(){_add=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(something){var url,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url=\"https://cubioinfo.com/aptitude-test/api/post/answersheets\";_context.prev=1;console.log(\"try to fetch\");_context.next=5;return fetch(url,{method:\"POST\",headers:{Authorization:\"sometoken\"},body:JSON.stringify({payload:something})});case 5:response=_context.sent;console.log(\"do it\");_context.next=9;return response.json();case 9:return _context.abrupt(\"return\",_context.sent);case 12:_context.prev=12;_context.t0=_context[\"catch\"](1);console.log(_context.t0);case 15:case\"end\":return _context.stop();}}},_callee,null,[[1,12]]);}));return _add.apply(this,arguments);}","map":{"version":3,"sources":["/Users/apple/Documents/GitHub/OCSCE/src/service/add.js"],"names":["add","something","url","console","log","fetch","method","headers","Authorization","body","JSON","stringify","payload","response","json"],"mappings":"iTAAA,uBAA8BA,CAAAA,GAA9B,wC,6EAAe,iBAAmBC,SAAnB,mIACPC,GADO,CACD,2DADC,iBAIXC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAJW,sBAKYC,CAAAA,KAAK,CAACH,GAAD,CAAM,CAChCI,MAAM,CAAE,MADwB,CAEhCC,OAAO,CAAE,CACPC,aAAa,CAAE,WADR,CAFuB,CAKhCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBC,OAAO,CAAEX,SADU,CAAf,CAL0B,CAAN,CALjB,QAKLY,QALK,eAcXV,OAAO,CAACC,GAAR,CAAY,OAAZ,EAdW,sBAgBES,CAAAA,QAAQ,CAACC,IAAT,EAhBF,iHAkBXX,OAAO,CAACC,GAAR,cAlBW,qE","sourcesContent":["export default async function add(something) {\n  const url = \"https://cubioinfo.com/aptitude-test/api/post/answersheets\";\n\n  try {\n    console.log(\"try to fetch\");\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"sometoken\",\n      },\n      body: JSON.stringify({\n        payload: something,\n      }),\n    });\n    console.log(\"do it\");\n\n    return await response.json();\n  } catch (error) {\n    console.log(error);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}