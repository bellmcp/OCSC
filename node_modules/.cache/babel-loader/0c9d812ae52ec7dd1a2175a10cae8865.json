{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/GitHub/OCSCE/src/Page/Education.js\";\nimport React, { Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport educationData from \"../Data/educationData\";\nimport majorData from \"../Data/majorData\"; // สร้างstyle\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    minWidth: 320\n  }\n}));\nexport default function SimpleSelect({\n  formProps: {\n    register,\n    errors\n  },\n  data,\n  setEducations\n}) {\n  const classes = useStyles();\n  const {\n    educate,\n    majorName\n  } = data;\n  const options = educationData.map(option => {\n    const firstLetter = option.education[0].toUpperCase();\n    return {\n      firstLetter: /[0-9]/.test(firstLetter) ? \"0-9\" : firstLetter,\n      ...option\n    };\n  });\n  const options_major = majorData.map(option => {\n    const firstLetter = option.major[0].toUpperCase();\n    return {\n      firstLetter: /[0-9]/.test(firstLetter) ? \"0-9\" : firstLetter,\n      ...option\n    };\n  });\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"\\u0E1B\\u0E23\\u0E30\\u0E27\\u0E31\\u0E15\\u0E34\\u0E01\\u0E32\\u0E23\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    padding: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    value: educate,\n    onChange: (e, value) => setEducations({ ...data,\n      educate: value\n    }),\n    options: options.sort((ก, อ) => -อ.firstLetter.localeCompare(ก.firstLetter)),\n    groupBy: option => option.firstLetter,\n    getOptionLabel: option => option.education,\n    fullWidth: true,\n    id: \"auto-complete\",\n    autoComplete: true,\n    includeInputInList: true,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"\\u0E23\\u0E30\\u0E14\\u0E31\\u0E1A\\u0E01\\u0E32\\u0E23\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32\",\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    padding: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    value: majorName,\n    onChange: (e, value) => setEducations({ ...data,\n      majorName: value\n    }),\n    options: options_major.sort((ก, อ) => -อ.firstLetter.localeCompare(ก.firstLetter)),\n    groupBy: option => option.firstLetter,\n    getOptionLabel: option => option.major,\n    fullWidth: true,\n    id: \"auto-complete\",\n    autoComplete: true,\n    includeInputInList: true,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"\\u0E2A\\u0E32\\u0E02\\u0E32\\u0E27\\u0E34\\u0E0A\\u0E32\\u0E17\\u0E35\\u0E48\\u0E2A\\u0E33\\u0E40\\u0E23\\u0E47\\u0E08\\u0E01\\u0E32\\u0E23\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32/\\u0E01\\u0E33\\u0E25\\u0E31\\u0E07\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32\\u0E2D\\u0E22\\u0E39\\u0E48\",\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  })))))));\n}","map":{"version":3,"sources":["/Users/apple/Documents/GitHub/OCSCE/src/Page/Education.js"],"names":["React","Fragment","makeStyles","Grid","TextField","Autocomplete","educationData","majorData","useStyles","theme","formControl","minWidth","SimpleSelect","formProps","register","errors","data","setEducations","classes","educate","majorName","options","map","option","firstLetter","education","toUpperCase","test","options_major","major","e","value","sort","ก","อ","localeCompare","params"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport educationData from \"../Data/educationData\";\nimport majorData from \"../Data/majorData\";\n\n// สร้างstyle\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    minWidth: 320,\n  },\n}));\n\nexport default function SimpleSelect({\n  formProps: { register, errors },\n  data,\n  setEducations,\n}) {\n  const classes = useStyles();\n  const { educate, majorName } = data;\n  const options = educationData.map((option) => {\n    const firstLetter = option.education[0].toUpperCase();\n    return {\n      firstLetter: /[0-9]/.test(firstLetter) ? \"0-9\" : firstLetter,\n      ...option,\n    };\n  });\n  const options_major = majorData.map((option) => {\n    const firstLetter = option.major[0].toUpperCase();\n    return {\n      firstLetter: /[0-9]/.test(firstLetter) ? \"0-9\" : firstLetter,\n      ...option,\n    };\n  });\n\n  return (\n    <Fragment>\n      <h1>ประวัติการศึกษา</h1>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={1}\n      >\n        <div className={classes.formControl}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={1}\n          >\n            <Grid item md={12} xs={12}>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                padding=\"2\"\n              >\n                <Autocomplete\n                  value={educate}\n                  onChange={(e, value) =>\n                    setEducations({ ...data, educate: value })\n                  }\n                  options={options.sort(\n                    (ก, อ) => -อ.firstLetter.localeCompare(ก.firstLetter)\n                  )}\n                  groupBy={(option) => option.firstLetter}\n                  getOptionLabel={(option) => option.education}\n                  fullWidth\n                  id=\"auto-complete\"\n                  autoComplete\n                  includeInputInList\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"ระดับการศึกษา\"\n                      margin=\"normal\"\n                    />\n                  )}\n                />\n              </Grid>\n            </Grid>\n            <Grid item md={12} xs={12}>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                padding=\"2\"\n              >\n                <Autocomplete\n                  value={majorName}\n                  onChange={(e, value) =>\n                    setEducations({ ...data, majorName: value })\n                  }\n                  options={options_major.sort(\n                    (ก, อ) => -อ.firstLetter.localeCompare(ก.firstLetter)\n                  )}\n                  groupBy={(option) => option.firstLetter}\n                  getOptionLabel={(option) => option.major}\n                  fullWidth\n                  id=\"auto-complete\"\n                  autoComplete\n                  includeInputInList\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"สาขาวิชาที่สำเร็จการศึกษา/กำลังศึกษาอยู่\"\n                      margin=\"normal\"\n                    />\n                  )}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </div>\n      </Grid>\n    </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}