{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nexport default async function add(something) {\n  const url = \"https://cubioinfo.com/aptitude-test/api/answersheets/1\";\n\n  try {\n    console.log(\"try to fetch\");\n    console.log(\"json post:\", JSON.stringify(something));\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Content: \"application/json; charset=utf-8\"\n      },\n      body: JSON.stringify(something)\n    }).then(response => {\n      if (response.ok) {\n        return response.json(); // return await response.json();\n      }\n\n      if (response.status <= 501) {\n        console.log(response.status); // alert(\n        //    \"เกิดปัญหา\" +\n        //     response.status +\n        //      \"\\n คลิก close  เพื่อเริ่มทำแบบทดสอบใหม่อีกครั้ง\"\n        //  );\n        //  window.location.href = `${process.env.PUBLIC_URL}`;\n\n        return response.status; // eslint-disable-next-line prefer-promise-reject-errors\n      }\n    });\n  } catch (error) {\n    if (error.response) {\n      /*\n       * The request was made and the server responded with a\n       * status code that falls out of the range of 2xx\n       */\n      return error.response.status; //console.log(error.response.data);\n      //console.log(error.response.status);\n    } else if (error.request) {\n      /*\n       * The request was made but no response was received, `error.request`\n       * is an instance of XMLHttpRequest in the browser and an instance\n       * of http.ClientRequest in Node.js\n       */\n      return error.request;\n    } else {\n      // Something happened in setting up the request and triggered an Error\n      return 999;\n    }\n  }\n}","map":{"version":3,"sources":["/Users/apple/Documents/GitHub/OCSCE/src/service/add.js"],"names":["React","axios","add","something","url","console","log","JSON","stringify","fetch","method","headers","Content","body","then","response","ok","json","status","error","request"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,eAAeC,GAAf,CAAmBC,SAAnB,EAA8B;AAC3C,QAAMC,GAAG,GAAG,wDAAZ;;AAEA,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,IAAI,CAACC,SAAL,CAAeL,SAAf,CAA1B;AACAM,IAAAA,KAAK,CAACL,GAAD,EAAM;AACTM,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,OAAO,EAAE;AACPC,QAAAA,OAAO,EAAE;AADF,OAFA;AAKTC,MAAAA,IAAI,EAAEN,IAAI,CAACC,SAAL,CAAeL,SAAf;AALG,KAAN,CAAL,CAMGW,IANH,CAMSC,QAAD,IAAc;AACpB,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,eAAOD,QAAQ,CAACE,IAAT,EAAP,CADe,CAGf;AACD;;AACD,UAAIF,QAAQ,CAACG,MAAT,IAAmB,GAAvB,EAA4B;AAC1Bb,QAAAA,OAAO,CAACC,GAAR,CAAYS,QAAQ,CAACG,MAArB,EAD0B,CAE1B;AACA;AACA;AACA;AACA;AACA;;AACA,eAAOH,QAAQ,CAACG,MAAhB,CAR0B,CAU1B;AACD;AACF,KAxBD;AAyBD,GA5BD,CA4BE,OAAOC,KAAP,EAAc;AACd,QAAIA,KAAK,CAACJ,QAAV,EAAoB;AAClB;;;;AAIA,aAAOI,KAAK,CAACJ,QAAN,CAAeG,MAAtB,CALkB,CAMlB;AACA;AACD,KARD,MAQO,IAAIC,KAAK,CAACC,OAAV,EAAmB;AACxB;;;;;AAKA,aAAOD,KAAK,CAACC,OAAb;AACD,KAPM,MAOA;AACL;AACA,aAAO,GAAP;AACD;AACF;AACF","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nexport default async function add(something) {\n  const url = \"https://cubioinfo.com/aptitude-test/api/answersheets/1\";\n\n  try {\n    console.log(\"try to fetch\");\n    console.log(\"json post:\", JSON.stringify(something));\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Content: \"application/json; charset=utf-8\",\n      },\n      body: JSON.stringify(something),\n    }).then((response) => {\n      if (response.ok) {\n        return response.json();\n\n        // return await response.json();\n      }\n      if (response.status <= 501) {\n        console.log(response.status);\n        // alert(\n        //    \"เกิดปัญหา\" +\n        //     response.status +\n        //      \"\\n คลิก close  เพื่อเริ่มทำแบบทดสอบใหม่อีกครั้ง\"\n        //  );\n        //  window.location.href = `${process.env.PUBLIC_URL}`;\n        return response.status;\n\n        // eslint-disable-next-line prefer-promise-reject-errors\n      }\n    });\n  } catch (error) {\n    if (error.response) {\n      /*\n       * The request was made and the server responded with a\n       * status code that falls out of the range of 2xx\n       */\n      return error.response.status;\n      //console.log(error.response.data);\n      //console.log(error.response.status);\n    } else if (error.request) {\n      /*\n       * The request was made but no response was received, `error.request`\n       * is an instance of XMLHttpRequest in the browser and an instance\n       * of http.ClientRequest in Node.js\n       */\n      return error.request;\n    } else {\n      // Something happened in setting up the request and triggered an Error\n      return 999;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}