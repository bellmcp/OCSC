{"ast":null,"code":"import _regeneratorRuntime from\"/Users/apple/Documents/GitHub/OCSCE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/apple/Documents/GitHub/OCSCE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export default function post(_x){return _post.apply(this,arguments);}function _post(){_post=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(something){var url,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url=\"https://cubioinfo.com/aptitude-test/api/tokens/1234567891235\";console.log(something);_context.prev=2;_context.next=5;return fetch(url,{method:\"POST\",headers:{\"Content-Type\":\"application/problem+json; charset=utf-8\"},body:JSON.stringify(something)});case 5:response=_context.sent;if(!response.ok){_context.next=10;break;}_context.next=9;return response.json();case 9:return _context.abrupt(\"return\",_context.sent);case 10:if(!(response.status<=501)){_context.next=13;break;}console.log(response.status);return _context.abrupt(\"return\",response.status);case 13:_context.next=26;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](2);if(!_context.t0.response){_context.next=21;break;}return _context.abrupt(\"return\",_context.t0.response.status);case 21:if(!_context.t0.request){_context.next=25;break;}return _context.abrupt(\"return\",_context.t0.request);case 25:return _context.abrupt(\"return\",999);case 26:case\"end\":return _context.stop();}}},_callee,null,[[2,15]]);}));return _post.apply(this,arguments);}","map":{"version":3,"sources":["/Users/apple/Documents/GitHub/OCSCE/src/service/postlogin.js"],"names":["post","something","url","console","log","fetch","method","headers","body","JSON","stringify","response","ok","json","status","request"],"mappings":"iTAAA,uBAA8BA,CAAAA,IAA9B,yC,+EAAe,iBAAoBC,SAApB,mIACPC,GADO,CACD,8DADC,CAEbC,OAAO,CAACC,GAAR,CAAYH,SAAZ,EAFa,sCAIYI,CAAAA,KAAK,CAACH,GAAD,CAAM,CAChCI,MAAM,CAAE,MADwB,CAEhCC,OAAO,CAAE,CACP,eAAgB,yCADT,CAFuB,CAMhCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeT,SAAf,CAN0B,CAAN,CAJjB,QAILU,QAJK,mBAaPA,QAAQ,CAACC,EAbF,gDAcID,CAAAA,QAAQ,CAACE,IAAT,EAdJ,oEAgBPF,QAAQ,CAACG,MAAT,EAAmB,GAhBZ,2BAiBTX,OAAO,CAACC,GAAR,CAAYO,QAAQ,CAACG,MAArB,EAjBS,gCAkBFH,QAAQ,CAACG,MAlBP,+FAqBP,YAAMH,QArBC,0DAsBF,YAAMA,QAAN,CAAeG,MAtBb,cAuBA,YAAMC,OAvBN,0DAwBF,YAAMA,OAxBJ,0CA0BF,GA1BE,uE","sourcesContent":["export default async function post(something) {\n  const url = \"https://cubioinfo.com/aptitude-test/api/tokens/1234567891235\";\n  console.log(something);\n  try {\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/problem+json; charset=utf-8\",\n      },\n\n      body: JSON.stringify(something),\n    });\n\n    if (response.ok) {\n      return await response.json();\n    }\n    if (response.status <= 501) {\n      console.log(response.status);\n      return response.status;\n    }\n  } catch (error) {\n    if (error.response) {\n      return error.response.status;\n    } else if (error.request) {\n      return error.request;\n    } else {\n      return 999;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}