{"ast":null,"code":"import { isNil } from '@antv/util';\n/**\n * 按照给定的 minLimit/maxLimit/tickCount 均匀计算出刻度 ticks\n *\n * @param cfg Scale 配置项\n * @return ticks\n */\n\nexport default function strictLimit(cfg, defaultMin, defaultMax) {\n  var _a;\n\n  var minLimit = cfg.minLimit,\n      maxLimit = cfg.maxLimit,\n      min = cfg.min,\n      max = cfg.max,\n      _b = cfg.tickCount,\n      tickCount = _b === void 0 ? 5 : _b;\n  var tickMin = isNil(minLimit) ? isNil(defaultMin) ? min : defaultMin : minLimit;\n  var tickMax = isNil(maxLimit) ? isNil(defaultMax) ? max : defaultMax : maxLimit;\n\n  if (tickMin > tickMax) {\n    _a = [tickMin, tickMax], tickMax = _a[0], tickMin = _a[1];\n  }\n\n  if (tickCount <= 2) {\n    return [tickMin, tickMax];\n  }\n\n  var step = (tickMax - tickMin) / (tickCount - 1);\n  var ticks = [];\n\n  for (var i = 0; i < tickCount; i++) {\n    ticks.push(tickMin + step * i);\n  }\n\n  return ticks;\n}","map":{"version":3,"sources":["../../src/util/strict-limit.ts"],"names":[],"mappings":"AAAA,SAAS,KAAT,QAAsB,YAAtB;AAGA;;;;;;;AAMA,eAAc,SAAU,WAAV,CAAsB,GAAtB,EAAwC,UAAxC,EAA6D,UAA7D,EAAgF;;;AACpF,MAAA,QAAA,GAAA,GAAA,CAAA,QAAA;AAAA,MAAU,QAAA,GAAA,GAAA,CAAA,QAAV;AAAA,MAAoB,GAAA,GAAA,GAAA,CAAA,GAApB;AAAA,MAAyB,GAAA,GAAA,GAAA,CAAA,GAAzB;AAAA,MAA8B,EAAA,GAAA,GAAA,CAAA,SAA9B;AAAA,MAA8B,SAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAA9B;AACR,MAAI,OAAO,GAAG,KAAK,CAAC,QAAD,CAAL,GAAmB,KAAK,CAAC,UAAD,CAAL,GAAoB,GAApB,GAA0B,UAA7C,GAA2D,QAAzE;AACA,MAAI,OAAO,GAAG,KAAK,CAAC,QAAD,CAAL,GAAmB,KAAK,CAAC,UAAD,CAAL,GAAoB,GAApB,GAA0B,UAA7C,GAA2D,QAAzE;;AAEA,MAAI,OAAO,GAAG,OAAd,EAAuB;AACrB,IAAA,EAAA,GAAA,CAAA,OAAA,EAAA,OAAA,CAAA,EAAC,OAAA,GAAA,EAAA,CAAA,CAAA,CAAD,EAAU,OAAA,GAAA,EAAA,CAAA,CAAA,CAAV;AACD;;AAED,MAAI,SAAS,IAAI,CAAjB,EAAoB;AAClB,WAAO,CAAC,OAAD,EAAU,OAAV,CAAP;AACD;;AAED,MAAM,IAAI,GAAG,CAAC,OAAO,GAAG,OAAX,KAAuB,SAAS,GAAG,CAAnC,CAAb;AACA,MAAM,KAAK,GAAa,EAAxB;;AAEA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,SAApB,EAA+B,CAAC,EAAhC,EAAoC;AAClC,IAAA,KAAK,CAAC,IAAN,CAAW,OAAO,GAAG,IAAI,GAAG,CAA5B;AACD;;AAED,SAAO,KAAP;AACD","sourceRoot":"","sourcesContent":["import { isNil } from '@antv/util';\n/**\n * 按照给定的 minLimit/maxLimit/tickCount 均匀计算出刻度 ticks\n *\n * @param cfg Scale 配置项\n * @return ticks\n */\nexport default function strictLimit(cfg, defaultMin, defaultMax) {\n    var _a;\n    var minLimit = cfg.minLimit, maxLimit = cfg.maxLimit, min = cfg.min, max = cfg.max, _b = cfg.tickCount, tickCount = _b === void 0 ? 5 : _b;\n    var tickMin = isNil(minLimit) ? (isNil(defaultMin) ? min : defaultMin) : minLimit;\n    var tickMax = isNil(maxLimit) ? (isNil(defaultMax) ? max : defaultMax) : maxLimit;\n    if (tickMin > tickMax) {\n        _a = [tickMin, tickMax], tickMax = _a[0], tickMin = _a[1];\n    }\n    if (tickCount <= 2) {\n        return [tickMin, tickMax];\n    }\n    var step = (tickMax - tickMin) / (tickCount - 1);\n    var ticks = [];\n    for (var i = 0; i < tickCount; i++) {\n        ticks.push(tickMin + step * i);\n    }\n    return ticks;\n}\n//# sourceMappingURL=strict-limit.js.map"]},"metadata":{},"sourceType":"module"}